// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/WordFreq.proto

package proto_gen

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WordFreq struct {
	Word                 *string  `protobuf:"bytes,1,req,name=word" json:"word,omitempty"`
	Count                *int32   `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WordFreq) Reset()         { *m = WordFreq{} }
func (m *WordFreq) String() string { return proto.CompactTextString(m) }
func (*WordFreq) ProtoMessage()    {}
func (*WordFreq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e1cdead2dceb48a, []int{0}
}

func (m *WordFreq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordFreq.Unmarshal(m, b)
}
func (m *WordFreq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordFreq.Marshal(b, m, deterministic)
}
func (m *WordFreq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordFreq.Merge(m, src)
}
func (m *WordFreq) XXX_Size() int {
	return xxx_messageInfo_WordFreq.Size(m)
}
func (m *WordFreq) XXX_DiscardUnknown() {
	xxx_messageInfo_WordFreq.DiscardUnknown(m)
}

var xxx_messageInfo_WordFreq proto.InternalMessageInfo

func (m *WordFreq) GetWord() string {
	if m != nil && m.Word != nil {
		return *m.Word
	}
	return ""
}

func (m *WordFreq) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type WordFreqList struct {
	WordFreqs            []*WordFreq `protobuf:"bytes,1,rep,name=wordFreqs" json:"wordFreqs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WordFreqList) Reset()         { *m = WordFreqList{} }
func (m *WordFreqList) String() string { return proto.CompactTextString(m) }
func (*WordFreqList) ProtoMessage()    {}
func (*WordFreqList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e1cdead2dceb48a, []int{1}
}

func (m *WordFreqList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordFreqList.Unmarshal(m, b)
}
func (m *WordFreqList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordFreqList.Marshal(b, m, deterministic)
}
func (m *WordFreqList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordFreqList.Merge(m, src)
}
func (m *WordFreqList) XXX_Size() int {
	return xxx_messageInfo_WordFreqList.Size(m)
}
func (m *WordFreqList) XXX_DiscardUnknown() {
	xxx_messageInfo_WordFreqList.DiscardUnknown(m)
}

var xxx_messageInfo_WordFreqList proto.InternalMessageInfo

func (m *WordFreqList) GetWordFreqs() []*WordFreq {
	if m != nil {
		return m.WordFreqs
	}
	return nil
}

func init() {
	proto.RegisterType((*WordFreq)(nil), "proto_gen.WordFreq")
	proto.RegisterType((*WordFreqList)(nil), "proto_gen.WordFreqList")
}

func init() { proto.RegisterFile("proto/WordFreq.proto", fileDescriptor_0e1cdead2dceb48a) }

var fileDescriptor_0e1cdead2dceb48a = []byte{
	// 126 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x0f, 0xcf, 0x2f, 0x4a, 0x71, 0x2b, 0x4a, 0x2d, 0xd4, 0x03, 0x73, 0x85, 0x38, 0xc1,
	0x54, 0x7c, 0x7a, 0x6a, 0x9e, 0x92, 0x09, 0x17, 0x07, 0x4c, 0x52, 0x48, 0x88, 0x8b, 0xa5, 0x3c,
	0xbf, 0x28, 0x45, 0x82, 0x51, 0x81, 0x49, 0x83, 0x33, 0x08, 0xcc, 0x16, 0x12, 0xe1, 0x62, 0x4d,
	0xce, 0x2f, 0xcd, 0x2b, 0x91, 0x60, 0x52, 0x60, 0xd2, 0x60, 0x0d, 0x82, 0x70, 0x94, 0x1c, 0xb9,
	0x78, 0x60, 0xba, 0x7c, 0x32, 0x8b, 0x4b, 0x84, 0x0c, 0xb9, 0x38, 0xcb, 0xa1, 0xfc, 0x62, 0x09,
	0x46, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x61, 0x3d, 0xb8, 0x25, 0x7a, 0x30, 0xb5, 0x41, 0x08, 0x55,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x04, 0xee, 0x2b, 0x9a, 0x00, 0x00, 0x00,
}
